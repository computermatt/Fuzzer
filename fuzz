#! /usr/bin/env python3.3

import argparse
import sys

if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument("mode", nargs="?", help="Discover: Output a comprehensive, human-readable list of all discovered inputs to the system.  Techniques include both crawling and guessing. Test: Discover all inputs, then attempt a list of exploit vectors on those inputs. Report potential vulnerabilities.")
	parser.add_argument("--custom-auth", dest="cust_auth", help="Signal that the fuzzer should use hard-coded authentication for a specific application (e.g. dvwa). Optional.")	
	parser.add_argument("--common-words", dest="common_words", help="Newline-delimited file of common words to be used in page guessing and input guessing. Required (for discover).")
	parser.add_argument("--vectors", dest="vectors", help="Newline-delimited file of common exploits to vulnerabilities. Required (for test).")
	parser.add_argument("--sensitive", dest="sensitive", help="Newline-delimited file data that should never be leaked. It's assumed that this data is in the application's database (e.g. test data), but is not reported in any response. Required (for test).")
	parser.add_argument("--random", dest="is_random", help="When off, try each input to each page systematically.  When on, choose a random page, then a random input field and test all vectors. Default: false.", default="false")
	parser.add_argument("--slow", dest="slow", help='Number of milliseconds considered when a response is considered "slow". Default is 500 milliseconds', default="500")

	args = parser.parse_args()
	print(args)

